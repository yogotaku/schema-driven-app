openapi: 3.1.0
x-stoplight:
  id: mw9ar7a8zjvlc
info:
  title: openapi
  version: '1.0'
  description: 2023/03/02に開催する勉強会用のサンプルAPI
  contact:
    email: hoge@example.com
    name: takuya yogo
servers:
  - url: 'http://localhost:8090'
    description: localhost
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: データベースに存在するユーザーのID
    get:
      summary: Get User Info by User ID
      operationId: findUserByID
      description: idにマッチしたユーザー情報を取得する
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update User Information
      operationId: updateUserByID
      description: ユーザーの情報を更新する
      tags:
        - patch-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '204':
          description: No Content
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    post:
      summary: Create New User
      operationId: createUser
      description: ユーザーを新規作成する
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Missing Required Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email Already Taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      title: User
      type: object
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: ユーザーのユニークID.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: |
            ユーザーがメール認証を完了しているかどうか。
            完了していればtrue。
        createDate:
          type: string
          format: date
          description: ユーザー情報の作成日時
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    NewUser:
      title: NewUser
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
      required:
        - firstName
        - lastName
        - email
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
  requestBodies: {}
x-internal: false
tags:
  - name: user
